package xyz.itwill.lang;

//StringBuffer 문자열을 저장하기 위한 클래스
//=> 저장된 문자열의 문자를 직접 변환하는 메소드 제공
public class StringBufferApp {
	public static void main(String[] args) {
		
		
		//StringBuffer 클래스는 new 연산자로 생성자를 호출하여 인스턴스 생성
		StringBuffer sb = new StringBuffer("ABC");
		System.out.println("toString=========================================");
		//StringBuffer.toString(): StringBuffer 인스턴스에 저장된 문자열을 반환하는 메소드
		System.out.println(sb.toString());
		System.out.println(sb);
		
		System.out.println("StringBuffer=========================================");
		//StringBuffer 인스턴스를 String 인스턴스로 변환받아 저장
		String str = sb.toString();
		System.out.println(str);
		System.out.println("append=========================================");
		
		//StringBuffer.append(Object o):전달값을 저장된 문자열에 추가하는 메소드
		// String 인스턴스에 저장된 문자열에 += 연산자를 사용한 효과와 동일
		sb.append("DEF");
		System.out.println(sb);
		
		System.out.println("insert=========================================");
		//StringBuffer.insert(int offset, Object o): 저장된 문자열에서 원하는 위치(index)에
		//전달값을 삽입하는 메소드
		sb.insert(4, "X");
		System.out.println(sb);
		System.out.println("deleteCharAt=========================================");
		//StringBuffer.deleteCharAt(int index): 저장된 문자열에서 원하는 위치(index)의
		//문자를 제거하는 메소드
		sb.deleteCharAt(2);
		System.out.println(sb);
		System.out.println("delete=========================================");
		//StringBuffer.delete(int start, int end): 저장된 문자열에서 원하는 범위
		//(start 문자 포함, end 문자 미포함)의 문자들을 제거하는 메소드
		sb.delete(4,6);
		System.out.println(sb);
		System.out.println("reverse=========================================");
		//StringBuffer.reverse: 저장된 문자열의 문자를 반대로 바꾸어 저장하는 메서드
		sb.reverse();
		System.out.println(sb);

		
		
	}
}
