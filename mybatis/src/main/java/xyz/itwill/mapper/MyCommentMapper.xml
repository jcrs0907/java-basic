<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.itwill.mapper.MyCommentMapper">
	<!-- cache : SELECT 명령의 검색결과를 Cache 메모리에 저장하여 보다 빠른 검색결과를 제공하는 엘리먼트 -->
	<!-- => INSERT, UPDATE, DELETE 명령이 실행되면 Cache 메소리에 저장된 검색결과는 자동 초기화 -->
	<!-- => 검색결과를 저장하는 클래스는 반드시 객체직렬화 클래스로 선언 -->
	<!-- <cache/> -->

	<!-- 
	<insert id="insertComment" parameterType="MyComment1">
		insert into mycomment values(mycomment_seq.nextval, #{commentId}, #{commentContent}, sysdate)
	</insert>
	-->
	
	<insert id="insertComment" parameterType="MyComment1">
		<!-- selectKey : SELECT 명령의 검색 결과값을 인스턴스의 필드값으로 저장하기 위한 엘리먼트 -->
		<!-- => insert 엘리먼트의 하위 엘리먼트 -->
		<!-- => 자동 증가값 또는 난수값을 검색하여 인스턴스에 필드에 저장 -->
		<!-- resultType 속성 : 검색 결과값을 매핑하기 위한 Java 자료형(별칭)을 속성값으로 설정 -->
		<!-- keyProperty 속성 : 검색 결과값을 저장하기 위한 인스턴스의 필드명을 속성값으로 설정 -->
		<!-- order 속성 : BEFORE 또는 AFTER 중 하나를 속성값으로 설정 -->
		<selectKey resultType="int" keyProperty="commentNo" order="BEFORE">
			select mycomment_seq.nextval from dual
		</selectKey>
		insert into mycomment values(#{commentNo}, #{commentId}, #{commentContent}, sysdate)
	</insert>
	
	<select id="selectCommentList1" resultType="MyComment1">
		select * from mycomment order by comment_no desc
	</select>
</mapper>